{"ast":null,"code":"export function createOrder(order){return new Promise(async resolve=>{const response=await fetch('http://localhost:8080/orders',{method:'POST',body:JSON.stringify(order),headers:{'content-type':'application/json'}});const data=await response.json();resolve({data});});}export function updateOrder(order){return new Promise(async resolve=>{const response=await fetch('http://localhost:8080/orders/'+order.id,{method:'PATCH',body:JSON.stringify(order),headers:{'content-type':'application/json'}});const data=await response.json();resolve({data});});}export function fetchAllOrders(sort,pagination){let queryString='';for(let key in sort){queryString+=\"\".concat(key,\"=\").concat(sort[key],\"&\");}for(let key in pagination){queryString+=\"\".concat(key,\"=\").concat(pagination[key],\"&\");}return new Promise(async resolve=>{//TODO: we will not hard-code server URL here\nconst response=await fetch('http://localhost:8080/orders?'+queryString);const data=await response.json();const totalOrders=await response.headers.get('X-Total-Count');resolve({data:{orders:data,totalOrders:+totalOrders}});});}","map":{"version":3,"names":["createOrder","order","Promise","resolve","response","fetch","method","body","JSON","stringify","headers","data","json","updateOrder","id","fetchAllOrders","sort","pagination","queryString","key","concat","totalOrders","get","orders"],"sources":["D:/Majorproject/agromart/src/features/order/orderAPI.js"],"sourcesContent":["export function createOrder(order) {\n  return new Promise(async (resolve) => {\n    const response = await fetch('http://localhost:8080/orders', {\n      method: 'POST',\n      body: JSON.stringify(order),\n      headers: { 'content-type': 'application/json' },\n    });\n    const data = await response.json();\n    resolve({ data });\n  });\n}\n\nexport function updateOrder(order) {\n  return new Promise(async (resolve) => {\n    const response = await fetch('http://localhost:8080/orders/'+order.id, {\n      method: 'PATCH',\n      body: JSON.stringify(order),\n      headers: { 'content-type': 'application/json' },\n    });\n    const data = await response.json();\n    resolve({ data });\n  });\n}\n\nexport function fetchAllOrders(sort, pagination) {\n let queryString = '';\n\n for (let key in sort) {\n  queryString += `${key}=${sort[key]}&`;\n}\n  for (let key in pagination) {\n    queryString += `${key}=${pagination[key]}&`;\n  }\n\n  return new Promise(async (resolve) => {\n    //TODO: we will not hard-code server URL here\n    const response = await fetch(\n      'http://localhost:8080/orders?' + queryString\n    );\n    const data = await response.json();\n    const totalOrders = await response.headers.get('X-Total-Count');\n    resolve({ data: { orders: data, totalOrders: +totalOrders } });\n  });\n}"],"mappings":"AAAA,MAAO,SAAS,CAAAA,WAAWA,CAACC,KAAK,CAAE,CACjC,MAAO,IAAI,CAAAC,OAAO,CAAC,KAAO,CAAAC,OAAO,EAAK,CACpC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,8BAA8B,CAAE,CAC3DC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC,CAC3BS,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClCT,OAAO,CAAC,CAAEQ,IAAK,CAAC,CAAC,CACnB,CAAC,CAAC,CACJ,CAEA,MAAO,SAAS,CAAAE,WAAWA,CAACZ,KAAK,CAAE,CACjC,MAAO,IAAI,CAAAC,OAAO,CAAC,KAAO,CAAAC,OAAO,EAAK,CACpC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAACJ,KAAK,CAACa,EAAE,CAAE,CACrER,MAAM,CAAE,OAAO,CACfC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC,CAC3BS,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClCT,OAAO,CAAC,CAAEQ,IAAK,CAAC,CAAC,CACnB,CAAC,CAAC,CACJ,CAEA,MAAO,SAAS,CAAAI,cAAcA,CAACC,IAAI,CAAEC,UAAU,CAAE,CAChD,GAAI,CAAAC,WAAW,CAAG,EAAE,CAEpB,IAAK,GAAI,CAAAC,GAAG,GAAI,CAAAH,IAAI,CAAE,CACrBE,WAAW,KAAAE,MAAA,CAAOD,GAAG,MAAAC,MAAA,CAAIJ,IAAI,CAACG,GAAG,CAAC,KAAG,CACvC,CACE,IAAK,GAAI,CAAAA,GAAG,GAAI,CAAAF,UAAU,CAAE,CAC1BC,WAAW,KAAAE,MAAA,CAAOD,GAAG,MAAAC,MAAA,CAAIH,UAAU,CAACE,GAAG,CAAC,KAAG,CAC7C,CAEA,MAAO,IAAI,CAAAjB,OAAO,CAAC,KAAO,CAAAC,OAAO,EAAK,CACpC;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAC1B,+BAA+B,CAAGa,WACpC,CAAC,CACD,KAAM,CAAAP,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAS,WAAW,CAAG,KAAM,CAAAjB,QAAQ,CAACM,OAAO,CAACY,GAAG,CAAC,eAAe,CAAC,CAC/DnB,OAAO,CAAC,CAAEQ,IAAI,CAAE,CAAEY,MAAM,CAAEZ,IAAI,CAAEU,WAAW,CAAE,CAACA,WAAY,CAAE,CAAC,CAAC,CAChE,CAAC,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}