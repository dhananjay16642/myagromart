{"ast":null,"code":"import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{fetchLoggedInUserOrders,updateUser,fetchLoggedInUser}from'./userAPI';const initialState={userOrders:[],status:'idle',userInfo:null// this info will be used in case of detailed user info, while auth will \n// only be used for loggedInUser id etc checks\n};export const fetchLoggedInUserOrderAsync=createAsyncThunk('user/fetchLoggedInUserOrders',async id=>{const response=await fetchLoggedInUserOrders(id);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const fetchLoggedInUserAsync=createAsyncThunk('user/fetchLoggedInUser',async id=>{const response=await fetchLoggedInUser(id);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const updateUserAsync=createAsyncThunk('user/updateUser',async id=>{const response=await updateUser(id);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const userSlice=createSlice({name:'user',initialState,reducers:{},extraReducers:builder=>{builder.addCase(fetchLoggedInUserOrderAsync.pending,state=>{state.status='loading';}).addCase(fetchLoggedInUserOrderAsync.fulfilled,(state,action)=>{state.status='idle';state.userOrders=action.payload;}).addCase(updateUserAsync.pending,state=>{state.status='loading';}).addCase(updateUserAsync.fulfilled,(state,action)=>{state.status='idle';state.userOrders=action.payload;}).addCase(fetchLoggedInUserAsync.pending,state=>{state.status='loading';}).addCase(fetchLoggedInUserAsync.fulfilled,(state,action)=>{state.status='idle';// this info can be different or more from logged-in User info\nstate.userInfo=action.payload;});}});export const selectUserOrders=state=>state.user.userOrders;export const selectUserInfo=state=>state.user.userInfo;//export const { increment } = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchLoggedInUserOrders","updateUser","fetchLoggedInUser","initialState","userOrders","status","userInfo","fetchLoggedInUserOrderAsync","id","response","data","fetchLoggedInUserAsync","updateUserAsync","userSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","selectUserOrders","user","selectUserInfo","reducer"],"sources":["D:/Majorproject/agromart/src/features/user/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchLoggedInUserOrders, updateUser, fetchLoggedInUser } from './userAPI';\n\nconst initialState = {\n  userOrders: [],\n  status: 'idle',\n  userInfo: null, // this info will be used in case of detailed user info, while auth will \n  // only be used for loggedInUser id etc checks\n};\n\nexport const fetchLoggedInUserOrderAsync = createAsyncThunk(\n  'user/fetchLoggedInUserOrders',\n  async (id) => {\n    const response = await fetchLoggedInUserOrders(id);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchLoggedInUserAsync = createAsyncThunk(\n  'user/fetchLoggedInUser',\n  async (id) => {\n    const response = await fetchLoggedInUser(id);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const updateUserAsync = createAsyncThunk(\n  'user/updateUser',\n  async (id) => {\n    const response = await updateUser(id);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n   \n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchLoggedInUserOrderAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchLoggedInUserOrderAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n       \n        state.userOrders = action.payload;\n      })\n      .addCase(updateUserAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(updateUserAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.userOrders = action.payload;\n      })\n      .addCase(fetchLoggedInUserAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchLoggedInUserAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        // this info can be different or more from logged-in User info\n        state.userInfo = action.payload;\n      });\n  },\n});\n\nexport const selectUserOrders = (state) => state.user.userOrders;\nexport const selectUserInfo = (state) => state.user.userInfo;\n\n//export const { increment } = userSlice.actions;\n\nexport default userSlice.reducer;"],"mappings":"AAAA,OAASA,gBAAgB,CAAEC,WAAW,KAAQ,kBAAkB,CAChE,OAASC,uBAAuB,CAAEC,UAAU,CAAEC,iBAAiB,KAAQ,WAAW,CAElF,KAAM,CAAAC,YAAY,CAAG,CACnBC,UAAU,CAAE,EAAE,CACdC,MAAM,CAAE,MAAM,CACdC,QAAQ,CAAE,IAAM;AAChB;AACF,CAAC,CAED,MAAO,MAAM,CAAAC,2BAA2B,CAAGT,gBAAgB,CACzD,8BAA8B,CAC9B,KAAO,CAAAU,EAAE,EAAK,CACZ,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,uBAAuB,CAACQ,EAAE,CAAC,CAClD;AACA,MAAO,CAAAC,QAAQ,CAACC,IAAI,CACtB,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,sBAAsB,CAAGb,gBAAgB,CACpD,wBAAwB,CACxB,KAAO,CAAAU,EAAE,EAAK,CACZ,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAP,iBAAiB,CAACM,EAAE,CAAC,CAC5C;AACA,MAAO,CAAAC,QAAQ,CAACC,IAAI,CACtB,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,eAAe,CAAGd,gBAAgB,CAC7C,iBAAiB,CACjB,KAAO,CAAAU,EAAE,EAAK,CACZ,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,UAAU,CAACO,EAAE,CAAC,CACrC;AACA,MAAO,CAAAC,QAAQ,CAACC,IAAI,CACtB,CACF,CAAC,CAED,MAAO,MAAM,CAAAG,SAAS,CAAGd,WAAW,CAAC,CACnCe,IAAI,CAAE,MAAM,CACZX,YAAY,CACZY,QAAQ,CAAE,CAEV,CAAC,CACDC,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CACJC,OAAO,CAACX,2BAA2B,CAACY,OAAO,CAAGC,KAAK,EAAK,CACvDA,KAAK,CAACf,MAAM,CAAG,SAAS,CAC1B,CAAC,CAAC,CACDa,OAAO,CAACX,2BAA2B,CAACc,SAAS,CAAE,CAACD,KAAK,CAAEE,MAAM,GAAK,CACjEF,KAAK,CAACf,MAAM,CAAG,MAAM,CAErBe,KAAK,CAAChB,UAAU,CAAGkB,MAAM,CAACC,OAAO,CACnC,CAAC,CAAC,CACDL,OAAO,CAACN,eAAe,CAACO,OAAO,CAAGC,KAAK,EAAK,CAC3CA,KAAK,CAACf,MAAM,CAAG,SAAS,CAC1B,CAAC,CAAC,CACDa,OAAO,CAACN,eAAe,CAACS,SAAS,CAAE,CAACD,KAAK,CAAEE,MAAM,GAAK,CACrDF,KAAK,CAACf,MAAM,CAAG,MAAM,CACrBe,KAAK,CAAChB,UAAU,CAAGkB,MAAM,CAACC,OAAO,CACnC,CAAC,CAAC,CACDL,OAAO,CAACP,sBAAsB,CAACQ,OAAO,CAAGC,KAAK,EAAK,CAClDA,KAAK,CAACf,MAAM,CAAG,SAAS,CAC1B,CAAC,CAAC,CACDa,OAAO,CAACP,sBAAsB,CAACU,SAAS,CAAE,CAACD,KAAK,CAAEE,MAAM,GAAK,CAC5DF,KAAK,CAACf,MAAM,CAAG,MAAM,CACrB;AACAe,KAAK,CAACd,QAAQ,CAAGgB,MAAM,CAACC,OAAO,CACjC,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,gBAAgB,CAAIJ,KAAK,EAAKA,KAAK,CAACK,IAAI,CAACrB,UAAU,CAChE,MAAO,MAAM,CAAAsB,cAAc,CAAIN,KAAK,EAAKA,KAAK,CAACK,IAAI,CAACnB,QAAQ,CAE5D;AAEA,cAAe,CAAAO,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}