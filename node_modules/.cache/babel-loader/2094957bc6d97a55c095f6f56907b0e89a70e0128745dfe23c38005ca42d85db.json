{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './contactAPI';\nconst initialState = {\n  status: 'idle',\n  items: []\n};\nexport const incrementAsync = createAsyncThunk('counter/fetchCount', async amount => {\n  const response = await fetchCount(amount);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const contactSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: builder => {\n    builder.addCase(incrementAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(incrementAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.value += action.payload;\n    }).addCase(resetCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(resetCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items = [];\n    });\n  }\n});\nexport const selectItems = state => state.contact.items;\nexport default contactSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchCount","initialState","status","items","incrementAsync","amount","response","data","contactSlice","name","reducers","increment","state","value","extraReducers","builder","addCase","pending","fulfilled","action","payload","resetCartAsync","selectItems","contact","reducer"],"sources":["D:/Project/agromart/src/features/contact/contactSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './contactAPI';\n\nconst initialState = {\n  status: 'idle',\n  items: [],\n\n};\n\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const contactSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    \n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      })\n      .addCase(resetCartAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(resetCartAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.items = [];\n      });\n  },\n});\n\n\nexport const selectItems = (state) => state.contact.items;\n\nexport default contactSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,QAAQ,cAAc;AAEzC,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AAET,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGN,gBAAgB,CAC5C,oBAAoB,EACpB,MAAOO,MAAM,IAAK;EAChB,MAAMC,QAAQ,GAAG,MAAMN,UAAU,CAACK,MAAM,CAAC;EACzC;EACA,OAAOC,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGT,WAAW,CAAC;EACtCU,IAAI,EAAE,SAAS;EACfR,YAAY;EACZS,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACC,KAAK,IAAI,CAAC;IAClB;EAEF,CAAC;EACD;EACA;EACAC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACZ,cAAc,CAACa,OAAO,EAAGL,KAAK,IAAK;MAC1CA,KAAK,CAACV,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDc,OAAO,CAACZ,cAAc,CAACc,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MACpDP,KAAK,CAACV,MAAM,GAAG,MAAM;MACrBU,KAAK,CAACC,KAAK,IAAIM,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAACK,cAAc,CAACJ,OAAO,EAAGL,KAAK,IAAK;MAC1CA,KAAK,CAACV,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDc,OAAO,CAACK,cAAc,CAACH,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MACpDP,KAAK,CAACV,MAAM,GAAG,MAAM;MACrBU,KAAK,CAACT,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAGF,OAAO,MAAMmB,WAAW,GAAIV,KAAK,IAAKA,KAAK,CAACW,OAAO,CAACpB,KAAK;AAEzD,eAAeK,YAAY,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}