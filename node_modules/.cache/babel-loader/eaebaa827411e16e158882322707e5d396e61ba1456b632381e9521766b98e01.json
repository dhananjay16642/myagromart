{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAllProducts, fetchProductsByFilters, fetchBrands, fetchCategories } from './productAPI';\nconst initialState = {\n  products: [],\n  brands: [],\n  categories: [],\n  status: 'idle',\n  totalItems: 0\n};\nexport const fetchAllProductsAsync = createAsyncThunk('product/fetchAllProducts', async () => {\n  const response = await fetchAllProducts();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchProductsByFiltersAsync = createAsyncThunk('product/fetchProductsByFilters', async ({\n  filter,\n  sort,\n  pagination\n}) => {\n  const response = await fetchProductsByFilters(filter, sort, pagination);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchBrandsAsync = createAsyncThunk('product/fetchBrands', async () => {\n  const response = await fetchBrands();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchCategoriesAsync = createAsyncThunk('product/fetchCategories', async () => {\n  const response = await fetchCategories();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAllProductsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAllProductsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload;\n    }).addCase(fetchProductsByFiltersAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload.products;\n      state.totalItems = action.payload.totalItems;\n    }).addCase(fetchBrandsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchBrandsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.brands = action.payload;\n    }).addCase(fetchCategoriesAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.categories = action.payload;\n    });\n  }\n});\nexport const {\n  increment\n} = productSlice.actions;\nexport const selectAllProducts = state => state.product.products;\nexport const selectBrands = state => state.product.brands;\nexport const selectCategories = state => state.product.categories;\nexport const selectTotalItems = state => state.product.totalItems;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchAllProducts","fetchProductsByFilters","fetchBrands","fetchCategories","initialState","products","brands","categories","status","totalItems","fetchAllProductsAsync","response","data","fetchProductsByFiltersAsync","filter","sort","pagination","fetchBrandsAsync","fetchCategoriesAsync","productSlice","name","reducers","increment","state","value","extraReducers","builder","addCase","pending","fulfilled","action","payload","actions","selectAllProducts","product","selectBrands","selectCategories","selectTotalItems","reducer"],"sources":["D:/Project/agromart/src/features/product/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAllProducts,fetchProductsByFilters, fetchBrands, fetchCategories } from './productAPI';\n\nconst initialState = {\n  products: [],\n  brands:[],\n  categories:[],\n  status: 'idle',\n  totalItems:0\n};\n\n\nexport const fetchAllProductsAsync = createAsyncThunk(\n  'product/fetchAllProducts',\n  async () => {\n    const response = await fetchAllProducts();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\nexport const fetchProductsByFiltersAsync = createAsyncThunk(\n  'product/fetchProductsByFilters',\n  async ({filter,sort,pagination}) => {\n    const response = await fetchProductsByFilters(filter,sort,pagination);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchBrandsAsync = createAsyncThunk(\n  'product/fetchBrands',\n  async () => {\n    const response = await fetchBrands();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\nexport const fetchCategoriesAsync = createAsyncThunk(\n  'product/fetchCategories',\n  async () => {\n    const response = await fetchCategories();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAllProductsAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchAllProductsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.products = action.payload;\n      })\n      .addCase(fetchProductsByFiltersAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.products = action.payload.products;\n        state.totalItems = action.payload.totalItems;\n      })\n      .addCase(fetchBrandsAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchBrandsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.brands = action.payload;\n      })\n      .addCase(fetchCategoriesAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.categories = action.payload;\n      })\n  },\n});\n\nexport const { increment } = productSlice.actions;\n\nexport const selectAllProducts = (state) => state.product.products;\nexport const selectBrands = (state) => state.product.brands;\nexport const selectCategories = (state) => state.product.categories;\nexport const selectTotalItems = (state) => state.product.totalItems;\n\nexport default productSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,gBAAgB,EAACC,sBAAsB,EAAEC,WAAW,EAAEC,eAAe,QAAQ,cAAc;AAEpG,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAC,EAAE;EACTC,UAAU,EAAC,EAAE;EACbC,MAAM,EAAE,MAAM;EACdC,UAAU,EAAC;AACb,CAAC;AAGD,OAAO,MAAMC,qBAAqB,GAAGZ,gBAAgB,CACnD,0BAA0B,EAC1B,YAAY;EACV,MAAMa,QAAQ,GAAG,MAAMX,gBAAgB,CAAC,CAAC;EACzC;EACA,OAAOW,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AACD,OAAO,MAAMC,2BAA2B,GAAGf,gBAAgB,CACzD,gCAAgC,EAChC,OAAO;EAACgB,MAAM;EAACC,IAAI;EAACC;AAAU,CAAC,KAAK;EAClC,MAAML,QAAQ,GAAG,MAAMV,sBAAsB,CAACa,MAAM,EAACC,IAAI,EAACC,UAAU,CAAC;EACrE;EACA,OAAOL,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMK,gBAAgB,GAAGnB,gBAAgB,CAC9C,qBAAqB,EACrB,YAAY;EACV,MAAMa,QAAQ,GAAG,MAAMT,WAAW,CAAC,CAAC;EACpC;EACA,OAAOS,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AACD,OAAO,MAAMM,oBAAoB,GAAGpB,gBAAgB,CAClD,yBAAyB,EACzB,YAAY;EACV,MAAMa,QAAQ,GAAG,MAAMR,eAAe,CAAC,CAAC;EACxC;EACA,OAAOQ,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAGD,OAAO,MAAMO,YAAY,GAAGpB,WAAW,CAAC;EACtCqB,IAAI,EAAE,SAAS;EACfhB,YAAY;EACZiB,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACC,KAAK,IAAI,CAAC;IAClB;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACjB,qBAAqB,CAACkB,OAAO,EAAGL,KAAK,IAAK;MACjDA,KAAK,CAACf,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDmB,OAAO,CAACjB,qBAAqB,CAACmB,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC3DP,KAAK,CAACf,MAAM,GAAG,MAAM;MACrBe,KAAK,CAAClB,QAAQ,GAAGyB,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDJ,OAAO,CAACd,2BAA2B,CAACe,OAAO,EAAGL,KAAK,IAAK;MACvDA,KAAK,CAACf,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDmB,OAAO,CAACd,2BAA2B,CAACgB,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MACjEP,KAAK,CAACf,MAAM,GAAG,MAAM;MACrBe,KAAK,CAAClB,QAAQ,GAAGyB,MAAM,CAACC,OAAO,CAAC1B,QAAQ;MACxCkB,KAAK,CAACd,UAAU,GAAGqB,MAAM,CAACC,OAAO,CAACtB,UAAU;IAC9C,CAAC,CAAC,CACDkB,OAAO,CAACV,gBAAgB,CAACW,OAAO,EAAGL,KAAK,IAAK;MAC5CA,KAAK,CAACf,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDmB,OAAO,CAACV,gBAAgB,CAACY,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MACtDP,KAAK,CAACf,MAAM,GAAG,MAAM;MACrBe,KAAK,CAACjB,MAAM,GAAGwB,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAACT,oBAAoB,CAACU,OAAO,EAAGL,KAAK,IAAK;MAChDA,KAAK,CAACf,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDmB,OAAO,CAACT,oBAAoB,CAACW,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC1DP,KAAK,CAACf,MAAM,GAAG,MAAM;MACrBe,KAAK,CAAChB,UAAU,GAAGuB,MAAM,CAACC,OAAO;IACnC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET;AAAU,CAAC,GAAGH,YAAY,CAACa,OAAO;AAEjD,OAAO,MAAMC,iBAAiB,GAAIV,KAAK,IAAKA,KAAK,CAACW,OAAO,CAAC7B,QAAQ;AAClE,OAAO,MAAM8B,YAAY,GAAIZ,KAAK,IAAKA,KAAK,CAACW,OAAO,CAAC5B,MAAM;AAC3D,OAAO,MAAM8B,gBAAgB,GAAIb,KAAK,IAAKA,KAAK,CAACW,OAAO,CAAC3B,UAAU;AACnE,OAAO,MAAM8B,gBAAgB,GAAId,KAAK,IAAKA,KAAK,CAACW,OAAO,CAACzB,UAAU;AAEnE,eAAeU,YAAY,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}