{"ast":null,"code":"export function fetchAllProducts() {\n  return new Promise(async resolve => {\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products');\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchProductById(id) {\n  return new Promise(async resolve => {\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products/' + id);\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchProductsByFilters(filter, sort, pagination) {\n  // filter = {\"category\":[\"smartphone\",\"laptops\"]}\n  // sort = {_sort:\"price\",_order=\"desc\"}\n  // pagination = {_page:1,_limit=10} \n  // TODO : on server we will support multi values in filter\n  let queryString = '';\n  for (let key in filter) {\n    const categoryValues = filter[key];\n    if (categoryValues.length) {\n      const lastCategoryValue = categoryValues[categoryValues.length - 1];\n      queryString += `${key}=${lastCategoryValue}&`;\n    }\n  }\n  for (let key in sort) {\n    queryString += `${key}=${sort[key]}&`;\n  }\n  console.log(pagination);\n  for (let key in pagination) {\n    queryString += `${key}=${pagination[key]}&`;\n  }\n  return new Promise(async resolve => {\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products?' + queryString);\n    const data = await response.json();\n    const totalItems = await response.headers.get('X-Total-Count');\n    resolve({\n      data: {\n        products: data,\n        totalItems: +totalItems\n      }\n    });\n  });\n}\nexport function fetchCategories() {\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8080/categories');\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchBrands() {\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8080/brands');\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}","map":{"version":3,"names":["fetchAllProducts","Promise","resolve","response","fetch","data","json","fetchProductById","id","fetchProductsByFilters","filter","sort","pagination","queryString","key","categoryValues","length","lastCategoryValue","console","log","totalItems","headers","get","products","fetchCategories","fetchBrands"],"sources":["D:/Majorproject/agromart/src/features/product/productAPI.js"],"sourcesContent":["export function fetchAllProducts() {\n  return new Promise(async (resolve) => {\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products') \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}\n\nexport function fetchProductById(id) {\n  return new Promise(async (resolve) => {\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products/' + id);\n    const data = await response.json();\n    resolve({ data });\n  });\n} \n\nexport function fetchProductsByFilters(filter,sort,pagination) {\n  // filter = {\"category\":[\"smartphone\",\"laptops\"]}\n  // sort = {_sort:\"price\",_order=\"desc\"}\n  // pagination = {_page:1,_limit=10} \n  // TODO : on server we will support multi values in filter\n  let queryString = '';\n  for(let key in filter){\n    const categoryValues = filter[key];\n    if (categoryValues.length) {\n      const lastCategoryValue = categoryValues[categoryValues.length - 1];\n      queryString += `${key}=${lastCategoryValue}&`;\n    }\n  }\n  for (let key in sort) {\n    queryString += `${key}=${sort[key]}&`;\n  }\n\n  console.log(pagination);\n  for (let key in pagination) {\n    queryString += `${key}=${pagination[key]}&`;\n  }\n\n\n  return new Promise(async (resolve) =>{\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products?'+queryString) \n    const data = await response.json()\n    const totalItems = await response.headers.get('X-Total-Count')\n    resolve({data:{products:data,totalItems:+totalItems}})\n  }\n  );\n}\n\nexport function fetchCategories() {\n  return new Promise(async (resolve) =>{\n    const response = await fetch('http://localhost:8080/categories') \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}\n\nexport function fetchBrands() {\n  return new Promise(async (resolve) =>{\n    const response = await fetch('http://localhost:8080/brands') \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}"],"mappings":"AAAA,OAAO,SAASA,gBAAgBA,CAAA,EAAG;EACjC,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;IAC9D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAAC;MAACG;IAAI,CAAC,CAAC;EACjB,CACA,CAAC;AACH;AAEA,OAAO,SAASE,gBAAgBA,CAACC,EAAE,EAAE;EACnC,OAAO,IAAIP,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,GAAGI,EAAE,CAAC;IACpE,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAAC;MAAEG;IAAK,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASI,sBAAsBA,CAACC,MAAM,EAACC,IAAI,EAACC,UAAU,EAAE;EAC7D;EACA;EACA;EACA;EACA,IAAIC,WAAW,GAAG,EAAE;EACpB,KAAI,IAAIC,GAAG,IAAIJ,MAAM,EAAC;IACpB,MAAMK,cAAc,GAAGL,MAAM,CAACI,GAAG,CAAC;IAClC,IAAIC,cAAc,CAACC,MAAM,EAAE;MACzB,MAAMC,iBAAiB,GAAGF,cAAc,CAACA,cAAc,CAACC,MAAM,GAAG,CAAC,CAAC;MACnEH,WAAW,IAAK,GAAEC,GAAI,IAAGG,iBAAkB,GAAE;IAC/C;EACF;EACA,KAAK,IAAIH,GAAG,IAAIH,IAAI,EAAE;IACpBE,WAAW,IAAK,GAAEC,GAAI,IAAGH,IAAI,CAACG,GAAG,CAAE,GAAE;EACvC;EAEAI,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;EACvB,KAAK,IAAIE,GAAG,IAAIF,UAAU,EAAE;IAC1BC,WAAW,IAAK,GAAEC,GAAI,IAAGF,UAAU,CAACE,GAAG,CAAE,GAAE;EAC7C;EAGA,OAAO,IAAIb,OAAO,CAAC,MAAOC,OAAO,IAAI;IACnC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,GAACS,WAAW,CAAC;IAC3E,MAAMR,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,MAAMc,UAAU,GAAG,MAAMjB,QAAQ,CAACkB,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9DpB,OAAO,CAAC;MAACG,IAAI,EAAC;QAACkB,QAAQ,EAAClB,IAAI;QAACe,UAAU,EAAC,CAACA;MAAU;IAAC,CAAC,CAAC;EACxD,CACA,CAAC;AACH;AAEA,OAAO,SAASI,eAAeA,CAAA,EAAG;EAChC,OAAO,IAAIvB,OAAO,CAAC,MAAOC,OAAO,IAAI;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;IAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAAC;MAACG;IAAI,CAAC,CAAC;EACjB,CACA,CAAC;AACH;AAEA,OAAO,SAASoB,WAAWA,CAAA,EAAG;EAC5B,OAAO,IAAIxB,OAAO,CAAC,MAAOC,OAAO,IAAI;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAAC;MAACG;IAAI,CAAC,CAAC;EACjB,CACA,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}