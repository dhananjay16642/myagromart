{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { addToCart, deleteItemFromCart, fetchItemsByUserId, updateCart } from './cartAPI';\nconst initialState = {\n  status: \"idle\",\n  items: []\n};\nexport const addToCartAsync = createAsyncThunk(\"cart/addToCart\", async item => {\n  const response = await addToCart(item);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchItemsByUserIdAsync = createAsyncThunk(\"cart/fetchItemsByUserId\", async userId => {\n  const response = await fetchItemsByUserId(userId);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const updateCartAsync = createAsyncThunk('cart/updateCart', async update => {\n  const response = await updateCart(update);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const deleteItemFromCartAsync = createAsyncThunk('cart/deleteItemFromCart', async itemId => {\n  const response = await deleteItemFromCart(itemId);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const counterSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(addToCartAsync.pending, state => {\n      state.status = \"loading\";\n    }).addCase(addToCartAsync.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.items.push(action.payload);\n    }).addCase(fetchItemsByUserIdAsync.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchItemsByUserIdAsync.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.items = action.payload;\n    }).addCase(updateCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(updateCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const index = state.items.findIndex(item => item.id === action.payload.id);\n      state.items[index] = action.payload;\n    }).addCase(deleteItemFromCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(deleteItemFromCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const index = state.items.findIndex(item => item.id === action.payload.id);\n      state.items.splice(index, 1);\n    });\n  }\n});\nexport const {\n  increment\n} = counterSlice.actions;\nexport const selectItems = state => state.cart.items;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","addToCart","deleteItemFromCart","fetchItemsByUserId","updateCart","initialState","status","items","addToCartAsync","item","response","data","fetchItemsByUserIdAsync","userId","updateCartAsync","update","deleteItemFromCartAsync","itemId","counterSlice","name","reducers","increment","state","value","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","index","findIndex","id","splice","actions","selectItems","cart","reducer"],"sources":["D:/Project/agromart/src/features/cart/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { addToCart, deleteItemFromCart, fetchItemsByUserId, updateCart } from './cartAPI';\n\nconst initialState = {\n  status: \"idle\",\n  items: [],\n};\n\nexport const addToCartAsync = createAsyncThunk(\n  \"cart/addToCart\",\n  async (item) => {\n    const response = await addToCart(item);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchItemsByUserIdAsync = createAsyncThunk(\n  \"cart/fetchItemsByUserId\",\n  async (userId) => {\n    const response = await fetchItemsByUserId(userId);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const updateCartAsync = createAsyncThunk(\n  'cart/updateCart',\n  async (update) => {\n    const response = await updateCart(update);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const deleteItemFromCartAsync = createAsyncThunk(\n  'cart/deleteItemFromCart',\n  async (itemId) => {\n    const response = await deleteItemFromCart(itemId);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(addToCartAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(addToCartAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.items.push(action.payload);\n      })\n      .addCase(fetchItemsByUserIdAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchItemsByUserIdAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.items = action.payload;\n      })\n      .addCase(updateCartAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(updateCartAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        const index =  state.items.findIndex(item=>item.id===action.payload.id)\n        state.items[index] = action.payload;\n      })\n      .addCase(deleteItemFromCartAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(deleteItemFromCartAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        const index =  state.items.findIndex(item=>item.id===action.payload.id)\n        state.items.splice(index,1);\n      })\n  },\n});\n\nexport const { increment } = counterSlice.actions;\n\nexport const selectItems = (state) => state.cart.items;\n\nexport default counterSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}