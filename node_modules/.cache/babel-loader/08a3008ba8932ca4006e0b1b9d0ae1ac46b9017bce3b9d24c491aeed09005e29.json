{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { createOrder } from './orderAPI';\nconst initialState = {\n  orders: [],\n  status: 'idle',\n  currentOrder: null\n};\nexport const createOrderAsync = createAsyncThunk('order/createOrder', async order => {\n  const response = await createOrder(order);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const orderSlice = createSlice({\n  name: 'order',\n  initialState,\n  reducers: {\n    resetOrder: state => {\n      state.currentOrder = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createOrderAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(createOrderAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.orders.push(action.payload);\n      state.currentOrder = action.payload;\n    });\n  }\n});\nexport const {\n  resetOrder\n} = orderSlice.actions;\nexport const selectCurrentOrder = state => state.order.currentOrder;\nexport default orderSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","createOrder","initialState","orders","status","currentOrder","createOrderAsync","order","response","data","orderSlice","name","reducers","resetOrder","state","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","actions","selectCurrentOrder","reducer"],"sources":["D:/Project/agromart/src/features/order/orderSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { createOrder } from './orderAPI';\n\nconst initialState = {\n  orders: [],\n  status: 'idle',\n  currentOrder: null,\n};\n\nexport const createOrderAsync = createAsyncThunk(\n  'order/createOrder',\n  async (order) => {\n    const response = await createOrder(order);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const orderSlice = createSlice({\n  name: 'order',\n  initialState,\n  reducers: {\n    resetOrder: (state) => {\n      state.currentOrder = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createOrderAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(createOrderAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.orders.push(action.payload);\n        state.currentOrder = action.payload;\n      });\n  },\n});\n\nexport const { resetOrder } = orderSlice.actions;\n\nexport const selectCurrentOrder = (state) => state.order.currentOrder;\n\nexport default orderSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,WAAW,QAAQ,YAAY;AAExC,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE,MAAM;EACdC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGP,gBAAgB,CAC9C,mBAAmB,EACnB,MAAOQ,KAAK,IAAK;EACf,MAAMC,QAAQ,GAAG,MAAMP,WAAW,CAACM,KAAK,CAAC;EACzC;EACA,OAAOC,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGV,WAAW,CAAC;EACpCW,IAAI,EAAE,OAAO;EACbT,YAAY;EACZU,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACT,YAAY,GAAG,IAAI;IAC3B;EACF,CAAC;EACDU,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACX,gBAAgB,CAACY,OAAO,EAAGJ,KAAK,IAAK;MAC5CA,KAAK,CAACV,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDa,OAAO,CAACX,gBAAgB,CAACa,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACtDN,KAAK,CAACV,MAAM,GAAG,MAAM;MACrBU,KAAK,CAACX,MAAM,CAACkB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MACjCR,KAAK,CAACT,YAAY,GAAGe,MAAM,CAACE,OAAO;IACrC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET;AAAW,CAAC,GAAGH,UAAU,CAACa,OAAO;AAEhD,OAAO,MAAMC,kBAAkB,GAAIV,KAAK,IAAKA,KAAK,CAACP,KAAK,CAACF,YAAY;AAErE,eAAeK,UAAU,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}