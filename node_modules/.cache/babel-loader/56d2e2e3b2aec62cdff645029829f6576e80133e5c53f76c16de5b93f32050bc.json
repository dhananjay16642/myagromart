{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { checkUser, createUser, signOut } from './authAPI';\nimport { updateUser } from '../user/userAPI';\nconst initialState = {\n  loggedInUser: null,\n  status: 'idle',\n  error: null\n};\nexport const createUserAsync = createAsyncThunk('user/createUser', async userData => {\n  const response = await createUser(userData);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const updateUserAsync = createAsyncThunk('user/updateUser', async update => {\n  const response = await updateUser(update);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const checkUserAsync = createAsyncThunk('user/checkUser', async loginInfo => {\n  const response = await checkUser(loginInfo);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const signOutAsync = createAsyncThunk('user/signOut', async loginInfo => {\n  const response = await signOut(loginInfo);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createUserAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(createUserAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.loggedInUser = action.payload;\n    }).addCase(checkUserAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(checkUserAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.loggedInUser = action.payload;\n    }).addCase(checkUserAsync.rejected, (state, action) => {\n      state.status = 'idle';\n      state.error = action.error;\n    }).addCase(updateUserAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(updateUserAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.loggedInUser = action.payload;\n    }).addCase(signOutAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(signOutAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.loggedInUser = null;\n    });\n  }\n});\nexport const selectLoggedInUser = state => state.auth.loggedInUser;\nexport const selectError = state => state.auth.error;\n\n// export const { } = authSlice.actions;\n\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","checkUser","createUser","signOut","updateUser","initialState","loggedInUser","status","error","createUserAsync","userData","response","data","updateUserAsync","update","checkUserAsync","loginInfo","signOutAsync","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectLoggedInUser","auth","selectError","reducer"],"sources":["D:/Project/agromart/src/features/auth/authSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { checkUser, createUser, signOut } from './authAPI';\nimport { updateUser } from '../user/userAPI';\n\nconst initialState = {\n  loggedInUser: null,\n  status: 'idle',\n  error:null\n};\n\nexport const createUserAsync = createAsyncThunk(\n  'user/createUser',\n  async (userData) => {\n    const response = await createUser(userData);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const updateUserAsync = createAsyncThunk(\n  'user/updateUser',\n  async (update) => {\n    const response = await updateUser(update);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const checkUserAsync = createAsyncThunk(\n  'user/checkUser',\n  async (loginInfo) => {\n    const response = await checkUser(loginInfo);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const signOutAsync = createAsyncThunk(\n  'user/signOut',\n  async (loginInfo) => {\n    const response = await signOut(loginInfo);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    \n  },\n  extraReducers: (builder) => {\n    builder\n    .addCase(createUserAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(createUserAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUser = action.payload;\n      })\n      .addCase(checkUserAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(checkUserAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUser = action.payload;\n      })\n      .addCase(checkUserAsync.rejected, (state, action) => {\n        state.status = 'idle';\n        state.error = action.error;\n      }) \n      .addCase(updateUserAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(updateUserAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUser = action.payload;\n      })\n      .addCase(signOutAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(signOutAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUser = null;\n      })\n  },\n});\n\nexport const selectLoggedInUser = (state) => state.auth.loggedInUser;\nexport const selectError = (state) => state.auth.error;\n\n// export const { } = authSlice.actions;\n\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,SAAS,EAAEC,UAAU,EAAEC,OAAO,QAAQ,WAAW;AAC1D,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,IAAI;EAClBC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAC;AACR,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGV,gBAAgB,CAC7C,iBAAiB,EACjB,MAAOW,QAAQ,IAAK;EAClB,MAAMC,QAAQ,GAAG,MAAMT,UAAU,CAACQ,QAAQ,CAAC;EAC3C;EACA,OAAOC,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGd,gBAAgB,CAC7C,iBAAiB,EACjB,MAAOe,MAAM,IAAK;EAChB,MAAMH,QAAQ,GAAG,MAAMP,UAAU,CAACU,MAAM,CAAC;EACzC;EACA,OAAOH,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAGhB,gBAAgB,CAC5C,gBAAgB,EAChB,MAAOiB,SAAS,IAAK;EACnB,MAAML,QAAQ,GAAG,MAAMV,SAAS,CAACe,SAAS,CAAC;EAC3C;EACA,OAAOL,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMK,YAAY,GAAGlB,gBAAgB,CAC1C,cAAc,EACd,MAAOiB,SAAS,IAAK;EACnB,MAAML,QAAQ,GAAG,MAAMR,OAAO,CAACa,SAAS,CAAC;EACzC;EACA,OAAOL,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMM,SAAS,GAAGlB,WAAW,CAAC;EACnCmB,IAAI,EAAE,MAAM;EACZd,YAAY;EACZe,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACNC,OAAO,CAACd,eAAe,CAACe,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAAClB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDgB,OAAO,CAACd,eAAe,CAACiB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAAClB,MAAM,GAAG,MAAM;MACrBkB,KAAK,CAACnB,YAAY,GAAGqB,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDL,OAAO,CAACR,cAAc,CAACS,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAAClB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDgB,OAAO,CAACR,cAAc,CAACW,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAAClB,MAAM,GAAG,MAAM;MACrBkB,KAAK,CAACnB,YAAY,GAAGqB,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDL,OAAO,CAACR,cAAc,CAACc,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAAClB,MAAM,GAAG,MAAM;MACrBkB,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACnB,KAAK;IAC5B,CAAC,CAAC,CACDe,OAAO,CAACV,eAAe,CAACW,OAAO,EAAGC,KAAK,IAAK;MAC3CA,KAAK,CAAClB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDgB,OAAO,CAACV,eAAe,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAAClB,MAAM,GAAG,MAAM;MACrBkB,KAAK,CAACnB,YAAY,GAAGqB,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDL,OAAO,CAACN,YAAY,CAACO,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAAClB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDgB,OAAO,CAACN,YAAY,CAACS,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAAClB,MAAM,GAAG,MAAM;MACrBkB,KAAK,CAACnB,YAAY,GAAG,IAAI;IAC3B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAMwB,kBAAkB,GAAIL,KAAK,IAAKA,KAAK,CAACM,IAAI,CAACzB,YAAY;AACpE,OAAO,MAAM0B,WAAW,GAAIP,KAAK,IAAKA,KAAK,CAACM,IAAI,CAACvB,KAAK;;AAEtD;;AAEA,eAAeU,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}