{"ast":null,"code":"export function fetchLoggedInUserOrders(userId){return new Promise(async resolve=>{const response=await fetch('http://localhost:8080/orders/?user.id='+userId);const data=await response.json();resolve({data});});}export function fetchLoggedInUser(userId){return new Promise(async resolve=>{const response=await fetch('http://localhost:8080/users/'+userId);const data=await response.json();resolve({data});});}export function updateUser(update){return new Promise(async resolve=>{const response=await fetch('http://localhost:8080/users/'+update.id,{method:'PATCH',body:JSON.stringify(update),headers:{'content-type':'application/json'}});const data=await response.json();// TODO: on server it will only return some info of user (not password)\nresolve({data});});}","map":{"version":3,"names":["fetchLoggedInUserOrders","userId","Promise","resolve","response","fetch","data","json","fetchLoggedInUser","updateUser","update","id","method","body","JSON","stringify","headers"],"sources":["D:/Majorproject/agromart/src/features/user/userAPI.js"],"sourcesContent":["export function fetchLoggedInUserOrders(userId) {\n  return new Promise(async (resolve) =>{\n    const response = await fetch('http://localhost:8080/orders/?user.id='+userId) \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}\n\n\nexport function fetchLoggedInUser(userId) {\n  return new Promise(async (resolve) =>{\n    const response = await fetch('http://localhost:8080/users/'+userId) \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}\n\nexport function updateUser(update) {\n  return new Promise(async (resolve) => {\n    const response = await fetch('http://localhost:8080/users/'+update.id, {\n      method: 'PATCH',\n      body: JSON.stringify(update),\n      headers: { 'content-type': 'application/json' },\n    });\n    const data = await response.json();\n    // TODO: on server it will only return some info of user (not password)\n    resolve({ data });\n  });\n}"],"mappings":"AAAA,MAAO,SAAS,CAAAA,uBAAuBA,CAACC,MAAM,CAAE,CAC9C,MAAO,IAAI,CAAAC,OAAO,CAAC,KAAO,CAAAC,OAAO,EAAI,CACnC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,wCAAwC,CAACJ,MAAM,CAAC,CAC7E,KAAM,CAAAK,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCJ,OAAO,CAAC,CAACG,IAAI,CAAC,CAAC,CACjB,CACA,CAAC,CACH,CAGA,MAAO,SAAS,CAAAE,iBAAiBA,CAACP,MAAM,CAAE,CACxC,MAAO,IAAI,CAAAC,OAAO,CAAC,KAAO,CAAAC,OAAO,EAAI,CACnC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,8BAA8B,CAACJ,MAAM,CAAC,CACnE,KAAM,CAAAK,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCJ,OAAO,CAAC,CAACG,IAAI,CAAC,CAAC,CACjB,CACA,CAAC,CACH,CAEA,MAAO,SAAS,CAAAG,UAAUA,CAACC,MAAM,CAAE,CACjC,MAAO,IAAI,CAAAR,OAAO,CAAC,KAAO,CAAAC,OAAO,EAAK,CACpC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,8BAA8B,CAACK,MAAM,CAACC,EAAE,CAAE,CACrEC,MAAM,CAAE,OAAO,CACfC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAAC,CAC5BM,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CACF,KAAM,CAAAV,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClC;AACAJ,OAAO,CAAC,CAAEG,IAAK,CAAC,CAAC,CACnB,CAAC,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}