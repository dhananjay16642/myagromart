{"ast":null,"code":"export function fetchAllProducts() {\n  return new Promise(async resolve => {\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products');\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchProductsByFilters(filter) {\n  // filter = {\"category\":\"smartphone\"}\n  // TODO : on server we will support multi values\n  let queryString = '';\n  for (let key in filter) {\n    queryString += `${key}=${filter[key]}&`;\n  }\n  return new Promise(async resolve => {\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products?' + queryString);\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}","map":{"version":3,"names":["fetchAllProducts","Promise","resolve","response","fetch","data","json","fetchProductsByFilters","filter","queryString","key"],"sources":["D:/Project/agromart/src/features/product/productAPI.js"],"sourcesContent":["export function fetchAllProducts() {\n  return new Promise(async (resolve) =>{\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products') \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}\n\nexport function fetchProductsByFilters(filter) {\n  // filter = {\"category\":\"smartphone\"}\n  // TODO : on server we will support multi values\n  let queryString = '';\n  for(let key in filter){\n    queryString += `${key}=${filter[key]}&`\n  }\n\n  return new Promise(async (resolve) =>{\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products?'+queryString) \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}"],"mappings":"AAAA,OAAO,SAASA,gBAAgBA,CAAA,EAAG;EACjC,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAI;IACnC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;IAC9D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAAC;MAACG;IAAI,CAAC,CAAC;EACjB,CACA,CAAC;AACH;AAEA,OAAO,SAASE,sBAAsBA,CAACC,MAAM,EAAE;EAC7C;EACA;EACA,IAAIC,WAAW,GAAG,EAAE;EACpB,KAAI,IAAIC,GAAG,IAAIF,MAAM,EAAC;IACpBC,WAAW,IAAK,GAAEC,GAAI,IAAGF,MAAM,CAACE,GAAG,CAAE,GAAE;EACzC;EAEA,OAAO,IAAIT,OAAO,CAAC,MAAOC,OAAO,IAAI;IACnC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,GAACK,WAAW,CAAC;IAC3E,MAAMJ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAAC;MAACG;IAAI,CAAC,CAAC;EACjB,CACA,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}