{"ast":null,"code":"export function fetchLoggedInUserOrders(userId) {\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8080/orders/?user.id=' + userId);\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchLoggedInUser(userId) {\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8080/users/' + userId);\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function updateUser(update) {\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8080/users/' + update.id, {\n      method: 'PATCH',\n      body: JSON.stringify(update),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    // TODO: on server it will only return some info of user (not password)\n    resolve({\n      data\n    });\n  });\n}","map":{"version":3,"names":["fetchLoggedInUserOrders","userId","Promise","resolve","response","fetch","data","json","fetchLoggedInUser","updateUser","update","id","method","body","JSON","stringify","headers"],"sources":["D:/Majorproject/agromart/src/features/user/userAPI.js"],"sourcesContent":["export function fetchLoggedInUserOrders(userId) {\n  return new Promise(async (resolve) =>{\n    const response = await fetch('http://localhost:8080/orders/?user.id='+userId) \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}\n\n\nexport function fetchLoggedInUser(userId) {\n  return new Promise(async (resolve) =>{\n    const response = await fetch('http://localhost:8080/users/'+userId) \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}\n\nexport function updateUser(update) {\n  return new Promise(async (resolve) => {\n    const response = await fetch('http://localhost:8080/users/'+update.id, {\n      method: 'PATCH',\n      body: JSON.stringify(update),\n      headers: { 'content-type': 'application/json' },\n    });\n    const data = await response.json();\n    // TODO: on server it will only return some info of user (not password)\n    resolve({ data });\n  });\n}"],"mappings":"AAAA,OAAO,SAASA,uBAAuBA,CAACC,MAAM,EAAE;EAC9C,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAI;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,GAACJ,MAAM,CAAC;IAC7E,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAAC;MAACG;IAAI,CAAC,CAAC;EACjB,CACA,CAAC;AACH;AAGA,OAAO,SAASE,iBAAiBA,CAACP,MAAM,EAAE;EACxC,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAI;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAACJ,MAAM,CAAC;IACnE,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAAC;MAACG;IAAI,CAAC,CAAC;EACjB,CACA,CAAC;AACH;AAEA,OAAO,SAASG,UAAUA,CAACC,MAAM,EAAE;EACjC,OAAO,IAAIR,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAACK,MAAM,CAACC,EAAE,EAAE;MACrEC,MAAM,EAAE,OAAO;MACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAAC;MAC5BM,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,MAAMV,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC;IACAJ,OAAO,CAAC;MAAEG;IAAK,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}