{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAllProducts, fetchProductsByFilters, fetchBrands, fetchCategories, fetchProductById } from './agromartAPI';\nconst initialState = {\n  products: [],\n  brands: [],\n  categories: [],\n  status: 'idle',\n  totalItems: 0,\n  selectedProduct: null\n};\nexport const fetchAllProductsAsync = createAsyncThunk('product/fetchAllProducts', async () => {\n  const response = await fetchAllProducts();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchAllProductByIdAsync = createAsyncThunk('product/fetchProductById', async id => {\n  const response = await fetchProductById(id);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchProductsByFiltersAsync = createAsyncThunk('product/fetchProductsByFilters', async ({\n  filter,\n  sort,\n  pagination\n}) => {\n  const response = await fetchProductsByFilters(filter, sort, pagination);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchBrandsAsync = createAsyncThunk('product/fetchBrands', async () => {\n  const response = await fetchBrands();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchCategoriesAsync = createAsyncThunk('product/fetchCategories', async () => {\n  const response = await fetchCategories();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAllProductsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAllProductsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload;\n    }).addCase(fetchProductsByFiltersAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload.products;\n      state.totalItems = action.payload.totalItems;\n    }).addCase(fetchBrandsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchBrandsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.brands = action.payload;\n    }).addCase(fetchCategoriesAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.categories = action.payload;\n    }).addCase(fetchAllProductByIdAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAllProductByIdAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.selectedProduct = action.payload;\n    });\n  }\n});\n\n// export const {  } = productSlice.actions;\n\nexport const selectAllProducts = state => state.product.products;\nexport const selectBrands = state => state.product.brands;\nexport const selectCategories = state => state.product.categories;\nexport const selectProductById = state => state.product.selectedProduct;\nexport const selectTotalItems = state => state.product.totalItems;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchAllProducts","fetchProductsByFilters","fetchBrands","fetchCategories","fetchProductById","initialState","products","brands","categories","status","totalItems","selectedProduct","fetchAllProductsAsync","response","data","fetchAllProductByIdAsync","id","fetchProductsByFiltersAsync","filter","sort","pagination","fetchBrandsAsync","fetchCategoriesAsync","productSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","selectAllProducts","product","selectBrands","selectCategories","selectProductById","selectTotalItems","reducer"],"sources":["D:/Project/agromart/src/features/agromart/agromartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAllProducts,fetchProductsByFilters, fetchBrands, fetchCategories, fetchProductById } from './agromartAPI';\n\nconst initialState = {\n  products: [],\n  brands:[],\n  categories:[],\n  status: 'idle',\n  totalItems:0,\n  selectedProduct:null\n};\n\n\nexport const fetchAllProductsAsync = createAsyncThunk(\n  'product/fetchAllProducts',\n  async () => {\n    const response = await fetchAllProducts();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchAllProductByIdAsync = createAsyncThunk(\n  'product/fetchProductById',\n  async (id) => {\n    const response = await fetchProductById(id);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchProductsByFiltersAsync = createAsyncThunk(\n  'product/fetchProductsByFilters',\n  async ({filter,sort,pagination}) => {\n    const response = await fetchProductsByFilters(filter,sort,pagination);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchBrandsAsync = createAsyncThunk(\n  'product/fetchBrands',\n  async () => {\n    const response = await fetchBrands();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\nexport const fetchCategoriesAsync = createAsyncThunk(\n  'product/fetchCategories',\n  async () => {\n    const response = await fetchCategories();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    \n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAllProductsAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchAllProductsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.products = action.payload;\n      })\n      .addCase(fetchProductsByFiltersAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.products = action.payload.products;\n        state.totalItems = action.payload.totalItems;\n      })\n      .addCase(fetchBrandsAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchBrandsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.brands = action.payload;\n      })\n      .addCase(fetchCategoriesAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.categories = action.payload;\n      })\n      .addCase(fetchAllProductByIdAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchAllProductByIdAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.selectedProduct = action.payload;\n      })\n  },\n});\n\n// export const {  } = productSlice.actions;\n\nexport const selectAllProducts = (state) => state.product.products;\nexport const selectBrands = (state) => state.product.brands;\nexport const selectCategories = (state) => state.product.categories;\nexport const selectProductById = (state) => state.product.selectedProduct;\nexport const selectTotalItems = (state) => state.product.totalItems;\n\nexport default productSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}