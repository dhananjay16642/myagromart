{"ast":null,"code":"import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{checkUser,createUser,signOut}from'./authAPI';import{updateUser}from'../user/userAPI';const initialState={loggedInUser:null,status:'idle',error:null};export const createUserAsync=createAsyncThunk('user/createUser',async userData=>{const response=await createUser(userData);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const updateUserAsync=createAsyncThunk('user/updateUser',async update=>{const response=await updateUser(update);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const checkUserAsync=createAsyncThunk('user/checkUser',async loginInfo=>{const response=await checkUser(loginInfo);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const signOutAsync=createAsyncThunk('user/signOut',async loginInfo=>{const response=await signOut(loginInfo);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const authSlice=createSlice({name:'user',initialState,reducers:{},extraReducers:builder=>{builder.addCase(createUserAsync.pending,state=>{state.status='loading';}).addCase(createUserAsync.fulfilled,(state,action)=>{state.status='idle';state.loggedInUser=action.payload;}).addCase(checkUserAsync.pending,state=>{state.status='loading';}).addCase(checkUserAsync.fulfilled,(state,action)=>{state.status='idle';state.loggedInUser=action.payload;}).addCase(checkUserAsync.rejected,(state,action)=>{state.status='idle';state.error=action.error;}).addCase(updateUserAsync.pending,state=>{state.status='loading';}).addCase(updateUserAsync.fulfilled,(state,action)=>{state.status='idle';state.loggedInUser=action.payload;}).addCase(signOutAsync.pending,state=>{state.status='loading';}).addCase(signOutAsync.fulfilled,(state,action)=>{state.status='idle';state.loggedInUser=null;});}});export const selectLoggedInUser=state=>state.auth.loggedInUser;export const selectError=state=>state.auth.error;// export const { } = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","checkUser","createUser","signOut","updateUser","initialState","loggedInUser","status","error","createUserAsync","userData","response","data","updateUserAsync","update","checkUserAsync","loginInfo","signOutAsync","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectLoggedInUser","auth","selectError","reducer"],"sources":["D:/Majorproject/agromart/src/features/auth/authSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { checkUser, createUser, signOut } from './authAPI';\nimport { updateUser } from '../user/userAPI';\n\nconst initialState = {\n  loggedInUser: null,\n  status: 'idle',\n  error:null\n};\n\nexport const createUserAsync = createAsyncThunk(\n  'user/createUser',\n  async (userData) => {\n    const response = await createUser(userData);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const updateUserAsync = createAsyncThunk(\n  'user/updateUser',\n  async (update) => {\n    const response = await updateUser(update);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const checkUserAsync = createAsyncThunk(\n  'user/checkUser',\n  async (loginInfo) => {\n    const response = await checkUser(loginInfo);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const signOutAsync = createAsyncThunk(\n  'user/signOut',\n  async (loginInfo) => {\n    const response = await signOut(loginInfo);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    \n  },\n  extraReducers: (builder) => {\n    builder\n    .addCase(createUserAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(createUserAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUser = action.payload;\n      })\n      .addCase(checkUserAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(checkUserAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUser = action.payload;\n      })\n      .addCase(checkUserAsync.rejected, (state, action) => {\n        state.status = 'idle';\n        state.error = action.error;\n      }) \n      .addCase(updateUserAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(updateUserAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUser = action.payload;\n      })\n      .addCase(signOutAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(signOutAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUser = null;\n      })\n  },\n});\n\nexport const selectLoggedInUser = (state) => state.auth.loggedInUser;\nexport const selectError = (state) => state.auth.error;\n\n// export const { } = authSlice.actions;\n\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}