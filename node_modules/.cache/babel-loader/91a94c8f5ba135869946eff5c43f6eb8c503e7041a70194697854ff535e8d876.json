{"ast":null,"code":"export function fetchAllProducts() {\n  return new Promise(async resolve => {\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products');\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchProductsByFilters(filter, sort) {\n  // filter = {\"category\":[\"smartphone\",\"laptops\"]}\n  // sort = {_sort:\"price\",_order=\"desc\"}\n\n  // TODO : on server we will support multi values in filter\n  let queryString = '';\n  for (let key in filter) {\n    const categoryValues = filter[key];\n    if (categoryValues.length) {\n      const lastCategoryValue = categoryValues[categoryValues.length - 1];\n      queryString += `${key}=${lastCategoryValue}&`;\n    }\n  }\n  for (let key in sort) {\n    queryString += `${key}=${sort[key]}&`;\n  }\n  return new Promise(async resolve => {\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products?' + queryString);\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}","map":{"version":3,"names":["fetchAllProducts","Promise","resolve","response","fetch","data","json","fetchProductsByFilters","filter","sort","queryString","key","categoryValues","length","lastCategoryValue"],"sources":["D:/Project/agromart/src/features/product/productAPI.js"],"sourcesContent":["export function fetchAllProducts() {\n  return new Promise(async (resolve) =>{\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products') \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}\n\nexport function fetchProductsByFilters(filter,sort) {\n  // filter = {\"category\":[\"smartphone\",\"laptops\"]}\n  // sort = {_sort:\"price\",_order=\"desc\"}\n\n  // TODO : on server we will support multi values in filter\n  let queryString = '';\n  for(let key in filter){\n    const categoryValues = filter[key];\n    if(categoryValues.length){\n      const lastCategoryValue = categoryValues[categoryValues.length-1]\n      queryString += `${key}=${lastCategoryValue}&`\n    }\n  }\n  for(let key in sort){\n    queryString += `${key}=${sort[key]}&`\n  }\n\n  return new Promise(async (resolve) =>{\n    //TODO: we will not hard-code server URL here\n    const response = await fetch('http://localhost:8080/products?'+queryString) \n    const data = await response.json()\n    resolve({data})\n  }\n  );\n}"],"mappings":"AAAA,OAAO,SAASA,gBAAgBA,CAAA,EAAG;EACjC,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAI;IACnC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;IAC9D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAAC;MAACG;IAAI,CAAC,CAAC;EACjB,CACA,CAAC;AACH;AAEA,OAAO,SAASE,sBAAsBA,CAACC,MAAM,EAACC,IAAI,EAAE;EAClD;EACA;;EAEA;EACA,IAAIC,WAAW,GAAG,EAAE;EACpB,KAAI,IAAIC,GAAG,IAAIH,MAAM,EAAC;IACpB,MAAMI,cAAc,GAAGJ,MAAM,CAACG,GAAG,CAAC;IAClC,IAAGC,cAAc,CAACC,MAAM,EAAC;MACvB,MAAMC,iBAAiB,GAAGF,cAAc,CAACA,cAAc,CAACC,MAAM,GAAC,CAAC,CAAC;MACjEH,WAAW,IAAK,GAAEC,GAAI,IAAGG,iBAAkB,GAAE;IAC/C;EACF;EACA,KAAI,IAAIH,GAAG,IAAIF,IAAI,EAAC;IAClBC,WAAW,IAAK,GAAEC,GAAI,IAAGF,IAAI,CAACE,GAAG,CAAE,GAAE;EACvC;EAEA,OAAO,IAAIV,OAAO,CAAC,MAAOC,OAAO,IAAI;IACnC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,GAACM,WAAW,CAAC;IAC3E,MAAML,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAAC;MAACG;IAAI,CAAC,CAAC;EACjB,CACA,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}