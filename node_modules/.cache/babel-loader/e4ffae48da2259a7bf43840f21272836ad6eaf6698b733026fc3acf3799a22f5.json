{"ast":null,"code":"import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";import{addToCart,deleteItemFromCart,fetchItemsByUserId,resetCart,updateCart}from'./cartAPI';const initialState={status:\"idle\",items:[]};export const addToCartAsync=createAsyncThunk(\"cart/addToCart\",async item=>{const response=await addToCart(item);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const fetchItemsByUserIdAsync=createAsyncThunk(\"cart/fetchItemsByUserId\",async userId=>{const response=await fetchItemsByUserId(userId);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const updateCartAsync=createAsyncThunk('cart/updateCart',async update=>{const response=await updateCart(update);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const deleteItemFromCartAsync=createAsyncThunk('cart/deleteItemFromCart',async itemId=>{const response=await deleteItemFromCart(itemId);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const resetCartAsync=createAsyncThunk('cart/resetCart',async userId=>{const response=await resetCart(userId);// The value we return becomes the `fulfilled` action payload\nreturn response.data;});export const cartSlice=createSlice({name:\"cart\",initialState,reducers:{},extraReducers:builder=>{builder.addCase(addToCartAsync.pending,state=>{state.status=\"loading\";}).addCase(addToCartAsync.fulfilled,(state,action)=>{state.status=\"idle\";state.items.push(action.payload);}).addCase(fetchItemsByUserIdAsync.pending,state=>{state.status=\"loading\";}).addCase(fetchItemsByUserIdAsync.fulfilled,(state,action)=>{state.status=\"idle\";state.items=action.payload;}).addCase(updateCartAsync.pending,state=>{state.status='loading';}).addCase(updateCartAsync.fulfilled,(state,action)=>{state.status='idle';const index=state.items.findIndex(item=>item.id===action.payload.id);state.items[index]=action.payload;}).addCase(deleteItemFromCartAsync.pending,state=>{state.status='loading';}).addCase(deleteItemFromCartAsync.fulfilled,(state,action)=>{state.status='idle';const index=state.items.findIndex(item=>item.id===action.payload.id);state.items.splice(index,1);}).addCase(resetCartAsync.pending,state=>{state.status='loading';}).addCase(resetCartAsync.fulfilled,(state,action)=>{state.status='idle';state.items=[];});}});// export const { increment } = cartSlice.actions;\nexport const selectItems=state=>state.cart.items;export const selectCartStatus=state=>state.cart.status;export default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","addToCart","deleteItemFromCart","fetchItemsByUserId","resetCart","updateCart","initialState","status","items","addToCartAsync","item","response","data","fetchItemsByUserIdAsync","userId","updateCartAsync","update","deleteItemFromCartAsync","itemId","resetCartAsync","cartSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","push","payload","index","findIndex","id","splice","selectItems","cart","selectCartStatus","reducer"],"sources":["D:/Majorproject/agromart/src/features/cart/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { addToCart, deleteItemFromCart, fetchItemsByUserId, resetCart, updateCart } from './cartAPI';\n\nconst initialState = {\n  status: \"idle\",\n  items: [],\n};\n\nexport const addToCartAsync = createAsyncThunk(\n  \"cart/addToCart\",\n  async (item) => {\n    const response = await addToCart(item);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchItemsByUserIdAsync = createAsyncThunk(\n  \"cart/fetchItemsByUserId\",\n  async (userId) => {\n    const response = await fetchItemsByUserId(userId);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const updateCartAsync = createAsyncThunk(\n  'cart/updateCart',\n  async (update) => {\n    const response = await updateCart(update);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const deleteItemFromCartAsync = createAsyncThunk(\n  'cart/deleteItemFromCart',\n  async (itemId) => {\n    const response = await deleteItemFromCart(itemId);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const resetCartAsync = createAsyncThunk(\n  'cart/resetCart',\n  async (userId) => {\n    const response = await resetCart(userId);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n   \n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(addToCartAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(addToCartAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.items.push(action.payload);\n      })\n      .addCase(fetchItemsByUserIdAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchItemsByUserIdAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.items = action.payload;\n      })\n      .addCase(updateCartAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(updateCartAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        const index =  state.items.findIndex(item=>item.id===action.payload.id)\n        state.items[index] = action.payload;\n      })\n      .addCase(deleteItemFromCartAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(deleteItemFromCartAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        const index =  state.items.findIndex(item=>item.id===action.payload.id)\n        state.items.splice(index,1);\n      })\n      .addCase(resetCartAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(resetCartAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.items = [];\n      })\n  },\n});\n\n// export const { increment } = cartSlice.actions;\n\nexport const selectItems = (state) => state.cart.items;\nexport const selectCartStatus = (state) => state.cart.status;\n\nexport default cartSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}